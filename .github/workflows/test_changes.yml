name: Perform integration testing
on: [pull_request]

jobs:
  get_changed_json_files:
    runs-on: ubuntu-latest
    name: Get changed files

    outputs:
      all_changed_files: ${{ steps.changed-files.outputs.all_changed_files }}
      all_changed_files_count: ${{ steps.changed-files.outputs.all_changed_files_count }}

    steps:
      - uses: actions/checkout@v4

      - name: Get changed JSON files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            **.json

      - name: Write issue body
        id: write-issue-body
        if: steps.changed-files.outputs.all_changed_files_count == '1'
        env:
          ACTIONS_RUN_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        run: |
          body="One config file was updated in this PR. Setting off automated testing: ${ACTIONS_RUN_URL}"
          echo "body=$body" >> $GITHUB_OUTPUT

      - name: Create PR comment if one config changed
        if: steps.changed-files.outputs.all_changed_files_count == '1'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ steps.write-issue-body.outputs.body }}
          reactions: rocket

      - name: Create PR comment if no/multiple configs changed
        if: steps.changed-files.outputs.all_changed_files_count != '1'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            Either no or multiple config files were updated in this PR. Skipping uploading and automated testing.
          reactions: eyes

  upload_and_test:
    needs: get_changed_json_files
    if: needs.get_changed_json_files.outputs.all_changed_files_count == '1'
    env:
      CHANGED_FILE: ${{ needs.get_changed_json_files.outputs.all_changed_files }}
    runs-on: ubuntu-latest
    name: Upload and test changed files

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          sudo apt-get install -y aha

      - name: Get or create a DNAnexus project for testing
        id: get-create-project
        env:
          ACTIONS_RUN_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        run: |
          echo "${CHANGED_FILE} was changed in this PR"
          dx login --token ${{ secrets.DX_TOKEN }} --noprojects
          python get_or_create_testing_project.py -i ${CHANGED_FILE} -o dx_project_id.txt -u ${ACTIONS_RUN_URL}
          TEST_PROJ_ID=$(cat dx_project_id.txt)
          echo "TEST_PROJ_ID=$TEST_PROJ_ID" >> $GITHUB_OUTPUT

      - name: Upload changed JSON config file to testing_project
        env:
          TEST_PROJ_ID: ${{ steps.get-create-project.outputs.TEST_PROJ_ID }}
        id: upload-config
        run: |
          FILE_ID=$(dx upload ${CHANGED_FILE} --destination ${TEST_PROJ_ID}:/ --brief)
          echo "Config file uploaded to DNAnexus. File ID: $FILE_ID"
          echo "FILE_ID=$FILE_ID" >> $GITHUB_OUTPUT

      - name: Get production config in DNAnexus and output JSON with config info
        env:
          UPLOADED_FILE_ID: ${{ steps.upload-config.outputs.FILE_ID }}
        run: |
          python get_production_config.py -i ${CHANGED_FILE} -f ${UPLOADED_FILE_ID} -p ${{ vars.CONFIG_PATH }}

      - name: Generate diff report compared to production config
        id: generate-diff
        env:
          UPLOADED_FILE_ID: ${{ steps.upload-config.outputs.FILE_ID }}
        run: |
          PROD_CONFIG_ID=$(jq -r .prod.dxid config_diff.json)
          PROD_CONFIG_NAME=$(jq -r .prod.name config_diff.json)
          UPDATED_CONFIG_NAME=$(jq -r .updated.name config_diff.json)
          ASSAY=$(jq -r .assay config_diff.json)
          echo "ASSAY=$ASSAY" >> $GITHUB_OUTPUT

          icdiff --unified=3 --line-numbers --cols=250 -H <(dx cat ${PROD_CONFIG_ID}) -L ${PROD_CONFIG_NAME} <(dx cat ${UPLOADED_FILE_ID}) -L ${UPDATED_CONFIG_NAME} | aha > config_diff.html
          echo "Diff report generated"
      - uses: actions/upload-artifact@v4
        with:
          name: diff-report
          path: config_diff.html

      - name: Get current release version of Dias single workflow
        id: get-release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: eastgenomics
          repo: eggd_dias_single_workflow

      - name: Run tests in DNAnexus
        env:
          TEST_PROJ_ID: ${{ steps.get-create-project.outputs.TEST_PROJ_ID }}
          RELEASE_VERSION: ${{ steps.get-release.outputs.release }}
          ASSAY: ${{ steps.generate-diff.outputs.ASSAY }}
        run: |
          echo "Current release version of eggd_dias_single_workflow GitHub repository is ${RELEASE_VERSION}"
          TEST_JOB_ID=$(echo ${{ vars.TEST_JOBS }} | jq -r --arg key "$ASSAY" '.[$key]')
          echo "Running testing jobs for assay ${ASSAY} using inputs from previous production job ID ${TEST_JOB_ID}"

          python run_testing_jobs.py -c config_diff.json -t ${TEST_PROJ_ID} -j ${TEST_JOB_ID} -v ${RELEASE_VERSION} -l ${{ vars.TEST_SAMPLE_LIMIT }} -r ${{ github.run_id }}
